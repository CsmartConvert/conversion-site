---
import Layout from '../../layouts/Layout.astro';

const title = "Cost Per Serving Calculator";

let totalCost = "";
let servings = "";
let costPerServing = null;

// ‚úÖ Proper SSR form guard with content-type check
if (
  Astro.request?.method === 'POST' &&
  Astro.request.headers.get('content-type')?.includes('application/x-www-form-urlencoded')
) {
  const form = await Astro.request.formData();

  totalCost = form.get('totalCost') || "";
  servings = form.get('servings') || "";

  const cost = parseFloat(totalCost);
  const count = parseFloat(servings);

  if (!isNaN(cost) && !isNaN(count) && count > 0) {
    costPerServing = cost / count;
  }
}
---

<Layout>
  <!-- üçΩÔ∏è Header -->
  <section class="max-w-3xl mx-auto bg-gradient-to-r from-blue-600 to-blue-800 text-white py-6 px-4 md:py-8 mb-8 shadow text-center rounded-md">
    <h1 class="text-3xl font-bold mb-2">üçΩÔ∏è {title}</h1>
    <p class="text-base">Find out how much each portion of a product or recipe costs.</p>
  </section>

  <!-- üí° Tip -->
  <div class="bg-blue-50 border-l-4 border-blue-400 p-4 mb-6 max-w-3xl mx-auto">
    <p class="text-blue-700"><strong>üí° Tip:</strong> Use this to compare meals, grocery items, or bulk products to see what gives you the best value per serving.</p>
  </div>

  <!-- üî¢ Form -->
  <section class="bg-white border border-gray-200 p-6 rounded-lg shadow max-w-2xl mx-auto mb-10">
    <form method="POST" enctype="application/x-www-form-urlencoded" class="space-y-6">
      <div>
        <label for="totalCost" class="block font-medium text-gray-800">Total Cost ($):</label>
        <input
          type="number"
          step="any"
          name="totalCost"
          id="totalCost"
          class="w-full p-2 border rounded"
          value={totalCost}
          required
        />
      </div>

      <div>
        <label for="servings" class="block font-medium text-gray-800">Number of Servings:</label>
        <input
          type="number"
          step="any"
          name="servings"
          id="servings"
          class="w-full p-2 border rounded"
          value={servings}
          required
        />
      </div>

      <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded font-semibold w-full">
        Calculate Cost Per Serving
      </button>
    </form>

    {costPerServing !== null && (
      <div class="mt-6 bg-green-50 border border-green-300 text-green-800 font-semibold p-4 rounded text-center">
        Cost Per Serving: ${costPerServing.toFixed(2)}
      </div>
    )}
  </section>

  <!-- üìò Why This Matters + Pro Tips -->
  <section class="max-w-3xl mx-auto px-6 mt-6 mb-8">
    <h2 class="text-xl font-semibold mb-4 text-gray-800">Why This Matters</h2>
    <p class="text-gray-700 mb-4">
      Cost per serving helps you make smarter meal prep and grocery choices. It‚Äôs especially useful for comparing homemade meals, meal kits, and store-bought options.
    </p>

    <h3 class="text-lg font-semibold mb-2 text-gray-800">Pro Tips</h3>
    <ul class="list-disc list-inside text-gray-700 space-y-1">
      <li>Use when comparing pre-packaged items vs. cooking at home.</li>
      <li>Look at unit pricing and break it down by serving to spot hidden value.</li>
      <li>Bulk buys often reduce per-serving costs ‚Äî if you‚Äôll actually use them.</li>
    </ul>
  </section>
</Layout>

